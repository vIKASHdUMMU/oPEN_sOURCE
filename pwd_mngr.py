#Release Notes 
#V 1.0
#Password encryptor: 
#You can store the passwords in encrypted format using a key generated by cryptography module.
#Stored passwords can be viewed only when provided the key.
#Decryption of your password does not happen unless the key is provided. Causes "InvalidToken" exception.

#modules: 
#1 write_key() : to generate a key
#2 load_key() : to load the generated key during each run
#3 add() : to add a new password into the passwords file
#4 view() : to view the passwords


from cryptography.fernet import Fernet


def write_key():
    key=Fernet.generate_key()
    with open(master_pwd,'wb') as key_file:
        key_file.write(key)
        return key

def load_key():
    try:
        file=open(master_pwd,'rb')
        key=file.read()
        file.close()
    except:
       key=write_key()
    return key

master_pwd=input('What is the master password?')+'.key'

key=load_key()
fer=Fernet(key)

def view():
    with open('passwords.txt','r') as f:
        for line in f.readlines():
            data=line.rstrip()
            user,passw=data.split("|")
            print('user: ',user,', password: ',fer.decrypt(passw.encode()).decode())

def add():
    name=input('Account Name: ')
    pwd=input('Password: ')
    
    with open('passwords.txt','a') as f:
        f.write(name+ "|" +fer.encrypt(pwd.encode()).decode() + "\n")

while True:
    mode=input('Would you like to add a new password or view existing ones (View, Add)? Press Q to quit.').lower()

    if mode.lower()=="q":
        print('You chose to quit. Quitting the application.')
        break

    if mode.lower()=="view":
        view()
    elif mode.lower()=="add":
        add()
    else:
        print('Invalid Mode.')
        continue